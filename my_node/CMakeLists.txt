cmake_minimum_required(VERSION 3.8)
project(my_node)

set(CMAKE_CXX_STANDARD 17)
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()
set(CMAKE_CXX_STANDARD_REQUIRED True)

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(cartographer REQUIRED)
#find_package(builtin_interfaces REQUIRED)
find_package(Boost REQUIRED COMPONENTS iostreams)

include_directories(
  ${Boost_INCLUDE_DIRS}
)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

add_executable(rnode src/main.cpp)
target_link_libraries(rnode cartographer ${Boost_LIBRARIES} )
ament_target_dependencies(rnode cartographer)

install(TARGETS
  rnode
  #cartographer_x
  RUNTIME DESTINATION lib/${PROJECT_NAME}
)

ament_package()
